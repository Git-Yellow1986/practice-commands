- name: create instances
  hosts: local
  connection: local
  
  vars:
    subnet_id: "subnet-0bc41aa50c0fccefc"
    security_group: "sg-0b9fd6aabf64f5c40"
    ami_id: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - frontend
    zone: learnaws.space

  tasks:
  
  - name: install boto3 botocore
    ansible.builtin.pip:
      name:
      - boto3
      - botocore
    executable: pip3.9

       
  - name: Launch EC2 Instances
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: "t2.micro"
      image_id: "{{ami_id}}" 
      security_group: "{{security_group}}"  
      vpc_subnet_id: "{{subnet_id}}"  
    loop: "{{ instances }}"
    register: ec2_instances

  - name: Display instance information output
    ansible.builtin.debug:
      msg: "{{ ec2_instances}}"

    # Private IPs R53
  - name: Create R53 records for private IPs
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}"  # mysql.learnaws.space
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true 
    loop: "{{ ec2_instances.results }}"

    # Public IP R53 for frontend only
  - name: Create R53 records for private IPs
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}"  # learnaws.space
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true 
    loop: "{{ ec2_instances.results }}"
    when: item.item == 'frontend'